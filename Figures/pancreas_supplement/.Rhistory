datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(died ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = data))
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = data))
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
print(" ")
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
head(datawide)
msm = svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
print("")
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
data_1 = data[even -1]
data_1 = data[even -1,]
data_1 = data[even -1,]
psi = seq(-5, 5, 0.01)
data_1 = data[even -1,]
psi = seq(-5, 5, 0.01)
psi
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data$A
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
glm(A ~ L + Y_0, family = "binomial", link = "logit", data = data_1)
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
data_1 = data[even -1,]
psi = seq(-5, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
myglm
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
summary(myglm)
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
str(summary(myglm))
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
str(summary(myglm)$coefficients[[2]]$Pr(>|z|))
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
str(summary(myglm)$coefficients[[2]]$"Pr(>|z|)")
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
summary(myglm)$coefficients[[2]]$
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
summary(myglm)$coefficients[[2]]
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
summary(myglm)$coefficients
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
}
summary(myglm)$coefficients[3,4]
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
pvals
data_1 = data[even -1,]
psi = seq(-2, 2, 0.01)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
pvals > 0.05
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
pvals > 0.05
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
pvals[pvals > 0.05]
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
psi[pvals > 0.05]
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
summary(psi[pvals > 0.05])
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
plot(pvals)
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
plot(x = psi, y = pvals)
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
plot(x = psi, y = pvals, col = "red")
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
plot(x = psi, y = pvals, col = pvals > 0.05)
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
cols = rep("blue", length(psi))
cols[pvals > 0.05] = "red"
plot(x = psi, y = pvals, col = cols)
data_1 = data[even -1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4]
}
cols = rep("blue", length(psi))
cols[pvals > 0.05] = "red"
plot(x = psi, y = pvals, col = cols)
psi_range = psi[pvals > 0.05]
print(summary(psi_range))
library(geepack)
library(survey)
library(ipw)
library(reshape)
library(dplyr)
library(tidyr)
library(survey)
data = read.csv("Desktop/hw4_data.csv")
data = read.csv("hw4_data.csv")
head(data)
mypw = ipw::ipwtm(A, family = "binomial", link = "logit", denominator = ~ L, id = ID, timevar = time, data = data, type = "all")
weights = mypw$ipw.weights
n = seq(2, length(weights), 2)
weights = weights[even]
mypw = ipw::ipwtm(A, family = "binomial", link = "logit", denominator = ~ L, id = ID, timevar = time, data = data, type = "all")
weights = mypw$ipw.weights
even = seq(2, length(weights), 2)
weights = weights[even]
even
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
msm = svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
msm = svyglm(Y_2 ~ A_1 + A_2, design = svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
data_1 = data[time2 - 1,]
library(tidyr)
data = read.csv("hw4_data.csv")
head(data)
mypw = ipw::ipwtm(A, family = "binomial", link = "logit", denominator = ~ L, id = ID, timevar = time, data = data, type = "all")
weights = mypw$ipw.weights
time2 = seq(2, length(weights), 2)
weights = weights[time2]
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
msm = survey::svyglm(Y_2 ~ A_1 + A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
data_1 = data[time2 - 1,]
psi = seq(-2, 2, 0.001)
pvals = rep(0, length(psi))
for (i in c(1:length(psi))) {
data_1$Y_0 = data_1$Y - psi[i] * data_1$A
myglm = glm(A ~ L + Y_0, family = binomial(link = "logit"), data = data_1)
pvals[i] = summary(myglm)$coefficients[3,4] # store p-value
}
cols = rep("blue", length(psi))
cols[pvals > 0.05] = "red"
plot(x = psi, y = pvals, col = cols)
psi_range = psi[pvals > 0.05]
print(summary(psi_range))
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("hw4_data.csv")
head(data)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
head(datawide)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
head(datawide)
glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
head(datawide)
model1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
mode1
model1
summary(model1)
model1$fitted.values
min(model1$fitted.values)
max(model1$fitted.values)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
head(datawide)
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
min(model2$fitted.values)
min(probs2)
max(probs2)
probs2
sort(probs1)
sort(probs2)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
head(datawide)
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
weights = 1/(probs1 * probs2)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
data = read.csv("hw4_data.csv")
head(data)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
weights = 1/(probs1 * probs2)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
msm = survey::svyglm(Y_2 ~ A_1 + A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
data_1 = data[seq(1, length(data) -1, 2),]
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
weights = 1/(probs1 * probs2)
summary(weights)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
weights = 1/(probs1 * probs2)
sort(weights)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
weights = 1/(probs1 * probs2)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs1 = probs1*datawide$A_1 + (1 - probs_1)*(1 - datawide$A_1)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs1 = probs1*datawide$A_1 + (1 - probs1)*(1 - datawide$A_1)
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = probs2*datawide$A_2 + (1 - probs2)*(1 - datawide$A_2)
weights = 1/(probs1 * probs2)
library(tidyr)
datawide = data %>% pivot_wider(names_from = time, values_from = c(Y, A, L))
probs1 = glm(A_1 ~ L_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs1 = probs1*datawide$A_1 + (1 - probs1)*(1 - datawide$A_1)
probs2 = glm(A_2 ~ L_1 + L_2 + A_1, family = binomial(link = "logit"), data = datawide)$fitted.values
probs2 = probs2*datawide$A_2 + (1 - probs2)*(1 - datawide$A_2)
weights = 1/(probs1 * probs2)
datawide$weights = weights
msm = survey::svyglm(Y_2 ~ A_1 + A_2 + A_1*A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
msm = survey::svyglm(Y_2 ~ A_1 + A_2, design = survey::svydesign(~ 1, weights = weights, data = datawide))
coef(msm)
confint(msm)
if("Seurat" %in% rownames(installed.packages()) == F) {
install.packages('Seurat')
}
if("batchelor" %in% rownames(installed.packages()) == F) {
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("batchelor")
}
if("Seurat" %in% rownames(installed.packages()) == F) {
install.packages('Seurat')
}
if("batchelor" %in% rownames(installed.packages()) == F) {
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("batchelor")
}
if("scater" %in% rownames(installed.packages()) == F) {
BiocManager::install("scater")
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(Seurat)
library(batchelor)
library(scater)
(1+log(90)/100)^100
(1+log(90)/1000)^1000
(1+log(90)/10000)^10000
(1+log(90)/100000)^100000
(1+log(90)/1000000)^1000000
(1+log(90)/10000000)^10000000
(1+log(90)/100000000)^100000000
(1+log(90)/1000000000)^1000000000
install.packages('sctransform')
quit()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(cowplot))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(png))
suppressPackageStartupMessages(library(RANN))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(vioplot))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidyr))
genespaceARIs = read.csv('ARIs_normbybatch.csv')
genespaceARIs
